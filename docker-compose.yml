version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: docker_manager_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - docker_manager_network

  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: docker_manager_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/backend:/app
      - /app/node_modules # This is to avoid the local node_modules overwriting the container's
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - DEFAULT_ADMIN_USER=${DEFAULT_ADMIN_USER}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
    networks:
      - docker_manager_network
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
      target: build
    container_name: docker_manager_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend:/app
      - /app/node_modules
    command: ["npm", "start"]
    networks:
      - docker_manager_network
    depends_on:
      - backend

networks:
  docker_manager_network:
    driver: bridge

volumes:
  mongodb_data:
